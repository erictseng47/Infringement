{"ast":null,"code":"var _jsxFileName = \"/Users/pengshintsz/Desktop/Eric/Hello-React/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PatentInputForm from './components/PatentInputForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState(null);\n  const handleCheckInfringement = ({\n    patentId,\n    companyName\n  }) => {\n    fetch('http://localhost:3000/check-infringement', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        patentId,\n        companyName\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Fetched data:', data); // 调试信息\n      setResult(data);\n    }).catch(error => console.error('Error checking infringement:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patent Infringement Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatentInputForm, {\n      onSubmit: handleCheckInfringement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"X4bz0btR6WTE+CkTerVmRyY/5iQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PatentInputForm","ResultDisplay","jsxDEV","_jsxDEV","App","_s","result","setResult","handleCheckInfringement","patentId","companyName","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","data","console","log","catch","error","className","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/pengshintsz/Desktop/Eric/Hello-React/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PatentInputForm from './components/PatentInputForm';\nimport ResultDisplay from './components/ResultDisplay';\n\nfunction App() {\n    const [result, setResult] = useState(null);\n\n    const handleCheckInfringement = ({ patentId, companyName }) => {\n        fetch('http://localhost:3000/check-infringement', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ patentId, companyName })\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json();\n        })\n        .then(data => {\n            console.log('Fetched data:', data); // 调试信息\n            setResult(data);\n        })\n        .catch(error => console.error('Error checking infringement:', error));\n    };\n\n    return (\n        <div className=\"App\" style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\n            <h1>Patent Infringement Checker</h1>\n            <PatentInputForm onSubmit={handleCheckInfringement} />\n            <ResultDisplay result={result} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,uBAAuB,GAAGA,CAAC;IAAEC,QAAQ;IAAEC;EAAY,CAAC,KAAK;IAC3DC,KAAK,CAAC,0CAA0C,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,QAAQ;QAAEC;MAAY,CAAC;IAClD,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpCf,SAAS,CAACe,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC;EAED,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACjF7B,OAAA;MAAA6B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCjC,OAAA,CAACH,eAAe;MAACqC,QAAQ,EAAE7B;IAAwB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDjC,OAAA,CAACF,aAAa;MAACK,MAAM,EAAEA;IAAO;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd;AAAC/B,EAAA,CA/BQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}