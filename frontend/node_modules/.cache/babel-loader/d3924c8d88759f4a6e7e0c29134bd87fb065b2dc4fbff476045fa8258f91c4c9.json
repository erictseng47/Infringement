{"ast":null,"code":"var _jsxFileName = \"/Users/pengshintsz/Desktop/Eric/Hello-React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PatentInputForm from './components/PatentInputForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState(null);\n  const [patents, setPatents] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    // Fetch patents data\n    fetch('/data/patents.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setPatents(data)).catch(error => console.error('Error fetching patents:', error));\n\n    // Fetch company products data\n    fetch('/data/company_products.json').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setCompanies(data.companies)).catch(error => console.error('Error fetching companies:', error));\n  }, []);\n  const handleCheckInfringement = ({\n    patentId,\n    companyName\n  }) => {\n    fetch('http://localhost:3000/check-infringement', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        patentId,\n        companyName\n      })\n    }).then(response => response.json()).then(data => setResult(data)).catch(error => console.error('Error checking infringement:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patent Infringement Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatentInputForm, {\n      onSubmit: handleCheckInfringement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gXxpQ0sLaUTMIwuWNJggwsjHLZA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PatentInputForm","ResultDisplay","jsxDEV","_jsxDEV","App","_s","result","setResult","patents","setPatents","companies","setCompanies","fetch","then","response","ok","Error","json","data","catch","error","console","handleCheckInfringement","patentId","companyName","method","headers","body","JSON","stringify","className","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/pengshintsz/Desktop/Eric/Hello-React/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PatentInputForm from './components/PatentInputForm';\nimport ResultDisplay from './components/ResultDisplay';\n\nfunction App() {\n    const [result, setResult] = useState(null);\n    const [patents, setPatents] = useState([]);\n    const [companies, setCompanies] = useState([]);\n\n    useEffect(() => {\n        // Fetch patents data\n        fetch('/data/patents.json')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => setPatents(data))\n            .catch(error => console.error('Error fetching patents:', error));\n\n        // Fetch company products data\n        fetch('/data/company_products.json')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => setCompanies(data.companies))\n            .catch(error => console.error('Error fetching companies:', error));\n    }, []);\n\n    const handleCheckInfringement = ({ patentId, companyName }) => {\n        fetch('http://localhost:3000/check-infringement', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ patentId, companyName })\n        })\n        .then(response => response.json())\n        .then(data => setResult(data))\n        .catch(error => console.error('Error checking infringement:', error));\n    };\n\n    return (\n        <div className=\"App\" style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\n            <h1>Patent Infringement Checker</h1>\n            <PatentInputForm onSubmit={handleCheckInfringement} />\n            <ResultDisplay result={result} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}