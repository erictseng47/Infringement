{"ast":null,"code":"var _jsxFileName = \"/Users/pengshintsz/Desktop/Eric/Hello-React/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PatentInputForm from './components/PatentInputForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [result, setResult] = useState(null);\n  const [patents, setPatents] = useState([]);\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    // Fetch patents data\n    fetch('/data/patents.json').then(response => response.json()).then(data => setPatents(data));\n\n    // Fetch company products data\n    fetch('/data/company_products.json').then(response => response.json()).then(data => setCompanies(data.companies));\n  }, []);\n  const handleCheckInfringement = ({\n    patentId,\n    companyName\n  }) => {\n    const patent = patents.find(p => p.publication_number === patentId);\n    const company = companies.find(c => c.name === companyName);\n    if (patent && company) {\n      setResult({\n        patent: patent,\n        company: company,\n        message: 'Patent and company found in the database.'\n      });\n    } else {\n      setResult({\n        message: 'Patent or company not found in the database.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patent Infringement Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatentInputForm, {\n      onSubmit: handleCheckInfringement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gXxpQ0sLaUTMIwuWNJggwsjHLZA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PatentInputForm","ResultDisplay","jsxDEV","_jsxDEV","App","_s","result","setResult","patents","setPatents","companies","setCompanies","fetch","then","response","json","data","handleCheckInfringement","patentId","companyName","patent","find","p","publication_number","company","c","name","message","className","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/Users/pengshintsz/Desktop/Eric/Hello-React/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PatentInputForm from './components/PatentInputForm';\nimport ResultDisplay from './components/ResultDisplay';\n\nfunction App() {\n    const [result, setResult] = useState(null);\n    const [patents, setPatents] = useState([]);\n    const [companies, setCompanies] = useState([]);\n\n    useEffect(() => {\n        // Fetch patents data\n        fetch('/data/patents.json')\n            .then(response => response.json())\n            .then(data => setPatents(data));\n\n        // Fetch company products data\n        fetch('/data/company_products.json')\n            .then(response => response.json())\n            .then(data => setCompanies(data.companies));\n    }, []);\n\n    const handleCheckInfringement = ({ patentId, companyName }) => {\n        const patent = patents.find(p => p.publication_number === patentId);\n        const company = companies.find(c => c.name === companyName);\n\n        if (patent && company) {\n            setResult({\n                patent: patent,\n                company: company,\n                message: 'Patent and company found in the database.'\n            });\n        } else {\n            setResult({\n                message: 'Patent or company not found in the database.'\n            });\n        }\n    };\n\n    return (\n        <div className=\"App\" style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\n            <h1>Patent Infringement Checker</h1>\n            <PatentInputForm onSubmit={handleCheckInfringement} />\n            <ResultDisplay result={result} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACAa,KAAK,CAAC,oBAAoB,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,UAAU,CAACO,IAAI,CAAC,CAAC;;IAEnC;IACAJ,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAACN,SAAS,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,uBAAuB,GAAGA,CAAC;IAAEC,QAAQ;IAAEC;EAAY,CAAC,KAAK;IAC3D,MAAMC,MAAM,GAAGZ,OAAO,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,kBAAkB,KAAKL,QAAQ,CAAC;IACnE,MAAMM,OAAO,GAAGd,SAAS,CAACW,IAAI,CAACI,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKP,WAAW,CAAC;IAE3D,IAAIC,MAAM,IAAII,OAAO,EAAE;MACnBjB,SAAS,CAAC;QACNa,MAAM,EAAEA,MAAM;QACdI,OAAO,EAAEA,OAAO;QAChBG,OAAO,EAAE;MACb,CAAC,CAAC;IACN,CAAC,MAAM;MACHpB,SAAS,CAAC;QACNoB,OAAO,EAAE;MACb,CAAC,CAAC;IACN;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACjF9B,OAAA;MAAA8B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpClC,OAAA,CAACH,eAAe;MAACsC,QAAQ,EAAErB;IAAwB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDlC,OAAA,CAACF,aAAa;MAACK,MAAM,EAAEA;IAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEd;AAAChC,EAAA,CAzCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}